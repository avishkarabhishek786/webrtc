<!-- Take Profile Picture -->

<!DOCTYPE html>
<html lang="en">

<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <meta http-equiv="X-UA-Compatible" content="ie=edge">
    <title>WebRTC: Taking profile picture</title>
</head>

<body>

    <h4>Take Profile Picture</h4>

    <video id="videoTag" autoplay></video>

    <button id="takeProfilePictureButton" type="button" autofocus="true">Take Picture</button>
    
    <canvas id="profilePicCanvas" style="display:none;"></canvas>

    <div><img id="profilePictureOutput"></div>

    <script>
        var videoArea = document.querySelector("video");
        var profilePicCanvas = document.querySelector("#profilePicCanvas");
        var profilePictureOutput = document.querySelector("#profilePictureOutput");
        var takeProfilePicture = document.querySelector("#takeProfilePictureButton");
        var videoTag = document.querySelector("#videoTag");

        var width = 240;
        var height = 0;  // clculated based on image ratio
        var streaming = false; // true when video is loaded

        videoTag.addEventListener('canplay', function(e) {
            if (!streaming) {
                height = videoTag.videoHeight / (videoTag.videoWidth/width);

                if (isNaN(height)) {
                    height = width/(4/3);
                }

                videoTag.setAttribute('width', width);
                videoTag.setAttribute('height', height);
                profilePicCanvas.setAttribute('width', width);
                profilePicCanvas.setAttribute('height', height);
                streaming = true;
            }
        }, false);

        takeProfilePicture.addEventListener("click", function(e) {
            e.preventDefault();

            var context = profilePicCanvas.getContext('2d');
            if (width && height) {
                profilePicCanvas.width = width;
                profilePicCanvas.height = height;
                context.drawImage(videoTag, 0, 0, width, height);

                var data = profilePicCanvas.toDataURL('image/png');
                profilePictureOutput.setAttribute('src', data);
            }

        }, false);

        startStream();

        function startStream() {
            navigator.getUserMedia = navigator.getUserMedia ||
                navigator.webkitGetUserMedia ||
                navigator.mozGetuserMedia

            var constraint = {
                audio: false,
                video: {
                    mandatory: {
                        minWidth: 240,
                        maxWidth: 240,
                        minHeight: 240,
                        maxHeight: 240
                    }
                }
            }

            navigator.getUserMedia(constraint, onSuccess, onError);

        }

        function onSuccess(stream) {
            console.log("Success! We have a stream.");
            videoArea.src = window.URL.createObjectURL(stream);
            videoArea.play();
        }

        function onError(error) {
            console.error("An error occured.", error)
        }
    </script>

</body>

</html>